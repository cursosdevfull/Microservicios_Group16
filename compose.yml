services:
  mysql-server:
    image: mysql:8
    container_name: mysql-server
    environment:
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_DATABASE: db
      MYSQL_USER: user
      MYSQL_PASSWORD: 12345
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 8s
      retries: 3
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - network-mysql

  mysql-client:
    image: phpmyadmin
    container_name: mysql-client
    ports:
      - "8080:80"
    depends_on:
      mysql-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 8s
      retries: 3
    environment:
      PMA_ARBITRARY: 1
    networks:
      - network-mysql

  rabbitmq-server:
    image: rabbitmq:management-alpine
    container_name: rabbitmq-server
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: 12345
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 8s
      retries: 3
      start_interval: 10s
    networks:
      - network-mysql

  redis-server:
    image: redis:6.0.5-alpine
    container_name: redis-server
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 8s
      retries: 3
    command: redis-server --requirepass 12345
    networks:
      - network-mysql

  redis-client:
    image: rediscommander/redis-commander:latest
    container_name: redis-client
    ports:
      - "8081:8081"
    depends_on:
      redis-server:
        condition: service_healthy
    environment:
      REDIS_HOST: redis-server
      REDIS_PORT: 6379
      REDIS_PASSWORD: 12345
    # healthcheck:
    #   test: ["CMD", "nc", "-z", "localhost", "8081"]
    #   interval: 15s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 30s
    networks:
      - network-mysql

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: nc -z localhost 2181 || exit 1
      interval: 5s
      timeout: 5s
      retries: 3
      start_interval: 5s
    networks:
      - network-mysql

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 40s
    networks:
      - network-mysql

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8082:8080"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: "Local Kafka"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:29092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8082"]
    #   interval: 10s
    #   timeout: 8s
    #   retries: 3
    networks:
      - network-mysql

volumes:
  mysql-data:
    name: mysql-data

networks:
  network-mysql:
    driver: bridge
    name: network-mysql